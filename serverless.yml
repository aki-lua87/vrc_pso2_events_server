service: vrc-pso2-poster

frameworkVersion: '2'

plugins:
  - serverless-python-requirements
custom:
  s3_bucket: ${env:S3_PUBLIC_BUCKET}
  pythonRequirements:
    dockerizePip: true
    dockerImage: lambci/lambda:build-python3.8
    useStaticCache: false
    useDownloadCache: false
    zip: true

provider:
  name: aws
  runtime: python3.7
  lambdaHashingVersion: 20201221
  region: ap-northeast-1
  role: ${env:LAMBDA_IAM}

# you can add packaging information here
package:
  exclude:
    - node_modules/**
    - unity/**
    - test.py
    - .gitignore
    - package-lock.json
    - pso2events.mp4
    - pso2events.png
    - requirements.txt
    - serverless.yml
    - .env

functions:
  main:
    handler: handler.main
    memorySize: 3008
    timeout: 100
    environment:
      S3_PUBLIC_BUCKET: ${self:custom.s3_bucket}
    events:
      # 予告緊急終了のため
      # - schedule: cron(31 7 ? * WED *)
      # - schedule: cron(6 15 ? * * *)
  video:
    handler: video_list.main
    memorySize: 3008
    timeout: 100
    environment:
      S3_PUBLIC_BUCKET: ${self:custom.s3_bucket}
    events:
      - schedule:
        rate: cron(6 15 ? * * *)
        input:
          pathParameters: 
            user_id: 1e190f4d
      - http:
          # 非Lambda proxy
          integration: lambda
          path: /user/{user_id}/create/video/{type}
          method: get
          # request:
          #   template:
          #     application/json: '{ "type" : "$input.params(''bar'')" }'
          response:
            headers:
              Content-Type: "'binary/octet-stream'"
            contentHandling: CONVERT_TO_BINARY